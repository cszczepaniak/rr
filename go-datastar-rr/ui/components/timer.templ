package components

templ Timer(
	props TimerProps,
) {
	<div
		id="timer"
		class="flex flex-col gap-y-4"
		data-signals={ props.FormatSignalsJSON() }
	>
		<span
			id="time"
			class="text-center text-7xl"
			data-text="`${Math.floor($ticks/10)}.${Math.floor($ticks%10)}`"
			data-on-load="
				onLoad = () => {
					if (!$autoStart) {
						return;
					}
					clearAndStop = () => {
						if ($countingIn) {
							$countingIn = false;
							$ticks = $timerTicks;
						} else {
							window.clearInterval($interval);
							$started = false;
							$done = true;
						}
					};
					onTick = () => {
						$ticks--;
						if ($ticks === 0) {
							clearAndStop();
						}
					};
					$started = true;
					onTick();
					$interval = window.setInterval(onTick, 100)
				};
				onLoad();
			"
		></span>
		<button
			id="start"
			class="rounded-md bg-blue-200 disabled:bg-blue-100 cursor-pointer"
			data-on-click="
				clearAndStop = () => {
					if ($countingIn) {
						$countingIn = false;
						$ticks = $timerTicks;
					} else {
						window.clearInterval($interval);
						$started = false;
						$done = true;
					}
				};
				onTick = () => {
					$ticks--;
					if ($ticks === 0) {
						clearAndStop();
					}
				};
				$started = true;
				onTick();
				$interval = window.setInterval(onTick, 100)
			"
			data-show="!$started && !$done"
		>
			Start
		</button>
		<button
			id="stop"
			class="rounded-md bg-blue-200 cursor-pointer"
			data-on-click="
				$started = false;
				window.clearInterval($interval);
			"
			data-show="$started && !$done"
		>
			Stop
		</button>
	</div>
}
